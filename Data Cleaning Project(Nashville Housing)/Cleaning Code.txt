/*

Cleaning Data using SQL Queries

*/
--------------------------------------------------------------------------------------------------------------------------

How to import large Dataset into mysql WorkBench using shell in seconds (Tip:Never use import wizard of mysql workbench)

1****Open command Prompt
C:\Users\>mysql -u root -p --local-infile   (Hit Enter)
Enter password: ****  (Enter your password) (Hit Enter)

2******
mysql>SET GLOBAL local_infile=1; (Hit Enter)

3******quit current server: 
mysql> quit (Hit Enter)
Bye

4***connect to the server with local-infile system variable :
mysql  -u root -p --local-infile=1 (Hit Enter)

5**Change to Database
use dbname; (Your database where table is created) (Hit Enter)

6****Load from CSV file
load data local infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/file.csv'
into table xyz
fields terminated by ','
enclosed by'"'
lines terminated by '\n'
ignore 1 rows;

--------------------------------------------------------------------------------------------------------------------------

select * from nashvillehousing;
SET SQL_SAFE_UPDATES = 0;   (To update Columns without assigning primary key)

--------------------------------------------------------------------------------------------------------------------------

-- Standardize Date Format


Select SaleDate
From nashvillehousing;

Update nashvillehousing
Set SaleDate=str_to_date(saleDate,'%M %e,%Y');   (Eg, April 09,2013)-->Format

-- If it doesn't Update properly

ALTER TABLE NashvilleHousing
Add SaleDateConverted Date;

Update NashvilleHousing
SET SaleDateConverted = CONVERT(SaleDate,Date);


--------------------------------------------------------------------------------------------------------------------------

-- Populate Property Address data

Select *
From nashvillehousing
Where PropertyAddress is null
order by ParcelID;

****First Populate Blank Fields with Null so that we can use ifnull() function later on

Update Nashville
Set PropertyAddress= Case
When PropertyAddress='' Then Null
Else PropertyAddress
ENd

select a.ParcelID,a.PropertyAddress,b.ParcelID,b.PropertyAddress,ifnull(a.PropertyAddress,b.PropertyAddress) from nashvillehousing as a
Join nashvillehousing as b
on a.ParcelID=b.ParcelID
and a.UniqueID <> b.UniqueID
where a.PropertyAddress is null;

update nashvillehousing as a
Join nashvillehousing as b
on a.ParcelID=b.ParcelID
and a.UniqueID <> b.UniqueID
Set a.PropertyAddress=ifnull(a.PropertyAddress,b.PropertyAddress) 
where a.PropertyAddress is null;

--------------------------------------------------------------------------------------------------------------------------

-- Breaking out Address into Individual Columns (Address, City, State)

select substring(PropertyAddress,1,position(',' in PropertyAddress)-1) as Address from nashvillehousing;
select substring(PropertyAddress,position(',' in PropertyAddress)+1,length(PropertyAddress)) from nashvillehousing;

alter table nashvillehousing
add SplitAddress varchar(250);

update nashvillehousing
set SplitAddress = substring(PropertyAddress,1,position(',' in PropertyAddress)-1) as Address from nashvillehousing;

alter table nashvillehousing
add SplitCity varchar(250);

update nashvillehousing
set SplitCity = substring(PropertyAddress,position(',' in PropertyAddress)+1,length(PropertyAddress));

--------------------------------------------------------------------------------------------------------------------------

--------- For OwnerAddress (Address,City,State) (Using different Technique)
select * from nashvillehousing;

select ownerAddress from nashvillehousing;

select substring_index(ownerAddress,',',1) from nashvillehousing;
select substring_index(substring_index(ownerAddress,',',2),',',-1) from nashvillehousing;
select substring_index(ownerAddress,',',-1) from nashvillehousing;

Alter table nashvillehousing
Add OwnerSplitAddress varchar(250);

Update nashvillehousing
Set OwnerSplitAddress = substring_index(ownerAddress,',',1);

Alter table nashvillehousing
Add OwnerCity varchar(250);

Update nashvillehousing
Set OwnerCity = substring_index(substring_index(ownerAddress,',',2),',',-1);

Alter table nashvillehousing
Add OwnerState varchar(250);

Update nashvillehousing
Set OwnerState = substring_index(ownerAddress,',',-1);

--------------------------------------------------------------------------------------------------------------------------


-- Change Y and N to Yes and No in "Sold as Vacant" field


Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From nashvillehousing
Group by SoldAsVacant
order by 2




Select SoldAsVacant
, CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END
From nashvillehousing


Update nashvillehousing
SET SoldAsVacant = CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END






-----------------------------------------------------------------------------------------------------------------------------------------------------------

-- Remove Duplicates

WITH RowNumCTE AS(
Select *,
	ROW_NUMBER() OVER (
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 ORDER BY
					UniqueID
					) row_num

From PortfolioProject.dbo.NashvilleHousing
--order by ParcelID
)
Select *
From RowNumCTE
Where row_num > 1
Order by PropertyAddress



Select *
From PortfolioProject.dbo.NashvilleHousing




---------------------------------------------------------------------------------------------------------

-- Delete Unused Columns

Select *
From nashvillehousing


ALTER TABLE nashvillehousing
DROP COLUMN OwnerAddress;

ALTER TABLE nashvillehousing
DROP COLUMN TaxDistrict;

ALTER TABLE nashvillehousing
DROP COLUMN PropertyAddress;

----------------------------------------------------------End-------------------------------------------------------------------

*****Exporting to CSV from Mysql

SELECT * INTO OUTFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/file1.csv'
fields terminated by ','
enclosed by '"'
lines terminated by '\n'
FROM nashville;